---
version: '3.7'
networks:
  my_network:
    driver: bridge
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - my_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    networks:
      - my_network
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  axonserver:
    image: axoniq/axonserver
    container_name: axonserver
    ports:
      - "8024:8024"   # Axon Server HTTP Port
    volumes:
      - axon_data:/data
    environment:
      - AXONSERVER_HOSTNAME=axonserver
    restart: always 
    networks:
      - my_network
  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - my_network
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - "9000:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
  
   
volumes:
  prometheus_data:
  axon_data:
  prometheus-data:
 
            
         
         
 
