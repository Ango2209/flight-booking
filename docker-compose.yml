---
version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## MariaDB Docker Compose Config
  mariadb-booking:
    container_name: mariadb-order
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: password  # Set your desired root password here
      MYSQL_DATABASE: booking-service  # Optional: Create a specific database during initialization
      MYSQL_USER: root  # Optional: Create a specific user during initialization
      MYSQL_PASSWORD: password  # Optional: Set a password for the created user
    volumes:
      - ./mariadb-booking:/var/lib/mysql  # Use the correct path for MariaDB data directory
    ports:
      - "3306:3306"
    restart: unless-stopped

  mariadb-user:
    container_name: mariadb-user
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: password  # Set your desired root password here
      MYSQL_DATABASE: user-service  # Optional: Create a specific database during initialization
      MYSQL_USER: root  # Optional: Create a specific user during initialization
      MYSQL_PASSWORD: password  # Optional: Set a password for the created user
    volumes:
      - ./mariadb-user:/var/lib/mysql  # Use the correct path for MariaDB data directory
    ports:
      - "3307:3307"
    restart: unless-stopped

    ## Eureka Server
  discovery-server:
      image: nguyenngo2208/discovery-server:latest
      container_name: discovery-server
      pull_policy: always
      ports:
        - "8761:8761"
      environment:
        - SPRING_PROFILES_ACTIVE=docker
  api-gateway:
    image: nguyenngo2208/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
  ## Booking-Service Docker Compose Config
  booking-service:
    container_name: booking-service
    image: nguyenngo2208/booking-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5431/order-service
    depends_on:
      - mariadb-booking
      - broker
      - discovery-server
      - api-gateway
  ## Notification-Service Docker Compose Config
  notification-service:
    container_name: notification-service
    image: nguyenngo2208/notification-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - discovery-server
      - api-gateway
